# name: CD Pipeline

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     name: deploy  # Job name must be exactly "deploy"
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Debug SSH Connection
#         run: |
#             echo "${{ secrets.AWS_SSH_KEY }}" > private_key.pem
#             chmod 600 private_key.pem
#             ls -l private_key.pem  # Check if file exists
#             ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.AWS_VM_USERNAME }}@${{ secrets.AWS_HOST }} "echo 'SSH Connection Successful!'"


#       - name: Deploy to EC2
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.AWS_HOST }}
#           username: ${{ secrets.AWS_VM_USERNAME }}
#           key: ${{ secrets.AWS_SSH_KEY }}
#           script: |
#             set -e  # Exit on error

#             # Ensure Docker & Docker Compose are installed
#             docker -v
#             docker compose version || sudo apt-get install -y docker-compose

#             # Create app directory
#             mkdir -p /home/${{ secrets.AWS_VM_USERNAME }}/app
#             cd /home/${{ secrets.AWS_VM_USERNAME }}/app

#             # Stop existing containers safely
#             docker compose down || true

#             # If repo exists, pull latest changes; otherwise, clone
#             if [ -d "hng12-stage2-fastapi-book-project" ]; then
#               cd hng12-stage2-fastapi-book-project
#               git reset --hard
#               git pull origin main
#             else
#               git clone https://github.com/onlydurodola/hng12-stage2-fastapi-book-project.git
#               cd hng12-stage2-fastapi-book-project
#             fi

#             # Start Docker containers
#             docker compose up --build -d



name: CD Pipeline
on:
  push:
    branches: [main]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_VM_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            # Update package index and install dependencies
            sudo apt-get update -y
            sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

            # Add Docker's official GPG key
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

            # Install Docker
            sudo apt-get update -y
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io

            # Add the SSH user to the Docker group
            sudo usermod -aG docker ${{ secrets.AWS_VM_USERNAME }}

            # Install Docker Compose
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

            # Verify installations
            docker --version
            docker-compose --version

            # Navigate to the project directory and deploy
            cd /home/ubuntu/
            git clone https://github.com/devemem/fastapi-book-project.git
            cd fastapi-book-project/
            git fetch origin main
            git reset --hard origin/main
            docker-compose up -d --build

