# name: CD - Deploy to AWS
# on:
#   push:
#     branches:
#       - main
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#       - name: Deploy to EC2
#         uses: appleboy/ssh-action@v0.1.8
#         with:
#           host: ${{ secrets.AWS_HOST }}
#           username: ubuntu
#           key: ${{ secrets.AWS_PRIVATE_KEY }}
#           script: |
#             cd fastapi-book-project
            
#             # Fetch the latest changes
#             git fetch origin main

#             # Reset the repository to match the remote main branch
#             git reset --hard origin/main
#             git clean -fd

#             # Force pull the latest changes
#             git pull origin main --force
            
#             # Stop and remove existing containers
#             docker-compose down || true
            
#             # Rebuild and restart containers
#             docker-compose up -d --build
            
#             # Verify running containers
#             docker ps



# name: CD Pipeline

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     name: deploy  # Job name must be exactly "deploy"
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Deploy to EC2
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.AWS_HOST }}
#           username: ${{ secrets.AWS_VM_USERNAME }}
#           key: ${{ secrets.AWS_SSH_KEY }}
#           script: |
#             mkdir -p /home/${{ secrets.AWS_VM_USERNAME }}/app
#             cd /home/${{ secrets.AWS_VM_USERNAME }}/app
            
#             docker compose down || true
            
#             rm -rf hng12-stage2-fastapi-book-project
#             git clone https://github.com/onlydurodola/hng12-stage2-fastapi-book-project.git
#             cd hng12-stage2-fastapi-book-project
            
#             docker compose up --build -d





name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: deploy  # Job name must be exactly "deploy"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug SSH Connection
        run: |
            echo "${{ secrets.AWS_SSH_KEY }}" > private_key.pem
            chmod 600 private_key.pem
            ls -l private_key.pem  # Check if file exists
            ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.AWS_VM_USERNAME }}@${{ secrets.AWS_HOST }} "echo 'SSH Connection Successful!'"


      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_VM_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            set -e  # Exit on error

            # Ensure Docker & Docker Compose are installed
            docker -v
            docker compose version || sudo apt-get install -y docker-compose

            # Create app directory
            mkdir -p /home/${{ secrets.AWS_VM_USERNAME }}/app
            cd /home/${{ secrets.AWS_VM_USERNAME }}/app

            # Stop existing containers safely
            docker compose down || true

            # If repo exists, pull latest changes; otherwise, clone
            if [ -d "hng12-stage2-fastapi-book-project" ]; then
              cd hng12-stage2-fastapi-book-project
              git reset --hard
              git pull origin main
            else
              git clone https://github.com/onlydurodola/hng12-stage2-fastapi-book-project.git
              cd hng12-stage2-fastapi-book-project
            fi

            # Start Docker containers
            docker compose up --build -d


